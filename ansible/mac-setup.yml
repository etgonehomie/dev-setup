---
- name: Setup mac configuration settings
  hosts: localhost
  vars_files:
    - vars.yml    # relative path to current playbook
  vars:
    mac_config_dir: "{{ root_dir }}/ansible/macos_config_backup"
  tasks:
    - name: Find all .txt files in mac-backup-config directory
      ansible.builtin.find:
        paths: "{{ mac_config_dir }}"
        patterns: "*.txt"
        recurse: no
      register: config_files
    
    - name: Debug file contents check
      ansible.builtin.debug:
        msg: "File: {{ item.path }}, Is Vault-Encrypted: {{ 'ANSIBLE_VAULT' in (lookup('file', item.path, errors='ignore') | default('', true)) }}"
      loop: "{{ config_files.files }}"

    - name: Decrypt each file with Ansible Vault
      # Use decrypted ansible vault password
      ansible.builtin.command:
        cmd: "ansible-vault decrypt {{ item.path }} --ask-vault-pass {{ mas_os_config_password }}"
      loop: "{{ config_files.files }}"
      # when: "'ANSIBLE_VAULT' in (lookup('file', item.path, errors='ignore') | default('', true))"
      register: decrypt_result
      changed_when: decrypt_result.rc == 0
      ignore_errors: true

    # - name: Convert and copy each .txt file to .plist in Preferences to replace existing
    #   ansible.builtin.shell: |
    #     plutil -convert xml1 -o "{{ ansible_env.HOME }}/Library/Preferences/{{ item.path | basename | replace('_', '.') | regex_replace('\\.txt$', '.plist') }}" "{{ item.path }}"
    #   loop: "{{ config_files.files }}"
    #   register: convert_result
    #   changed_when: convert_result.rc == 0  # Mark as changed if successful

    # - name: Restart affected apps to apply changes
    #   ansible.builtin.shell: "killall {{ item }}"
    #   loop:
    #     - "Dock"
    #     - "Finder"
    #     - "Terminal"
    #     - "Raycast"
    #   ignore_errors: yes  # Ignore if app isnâ€™t running